import { DidDocument, DidResolver, ResolveDidOptions } from '@atproto-labs/did-resolver';
import { AtprotoIdentityDidMethods, HandleResolver, ResolveHandleOptions, ResolvedHandle } from '@atproto-labs/handle-resolver';
export type ResolvedIdentity = {
    did: NonNullable<ResolvedHandle>;
    pds: URL;
};
export type ResolveIdentityOptions = ResolveDidOptions & ResolveHandleOptions;
export declare class IdentityResolver {
    readonly didResolver: DidResolver<AtprotoIdentityDidMethods>;
    readonly handleResolver: HandleResolver;
    constructor(didResolver: DidResolver<AtprotoIdentityDidMethods>, handleResolver: HandleResolver);
    resolve(input: string, options?: ResolveIdentityOptions): Promise<ResolvedIdentity>;
    getDocumentFromDid(did: NonNullable<ResolvedHandle>, options?: ResolveDidOptions): Promise<DidDocument<AtprotoIdentityDidMethods>>;
    getDocumentFromHandle(input: string, options?: ResolveHandleOptions): Promise<DidDocument<AtprotoIdentityDidMethods>>;
}
//# sourceMappingURL=identity-resolver.d.ts.map