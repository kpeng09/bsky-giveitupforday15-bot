import { TypeOf } from 'zod';
import { OAuthRedirectUri } from './oauth-redirect-uri.js';
import { OAuthScope } from './oauth-scope.js';
export declare const oauthClientIdLoopbackSchema: import("zod").ZodEffects<import("zod").ZodString, "http://localhost" | `http://localhost?${string}` | "http://localhost/" | `http://localhost/?${string}`, string>;
export type OAuthClientIdLoopback = TypeOf<typeof oauthClientIdLoopbackSchema>;
export declare function isOAuthClientIdLoopback(clientId: string): clientId is OAuthClientIdLoopback;
export declare function assertOAuthLoopbackClientId(clientId: string): asserts clientId is OAuthClientIdLoopback;
export declare function parseOAuthLoopbackClientId(clientId: string): {
    scope?: OAuthScope;
    redirect_uris?: [OAuthRedirectUri, ...OAuthRedirectUri[]];
};
//# sourceMappingURL=oauth-client-id-loopback.d.ts.map