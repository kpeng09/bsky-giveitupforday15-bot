"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMessageRef = isMessageRef;
exports.validateMessageRef = validateMessageRef;
exports.isMessageInput = isMessageInput;
exports.validateMessageInput = validateMessageInput;
exports.isMessageView = isMessageView;
exports.validateMessageView = validateMessageView;
exports.isDeletedMessageView = isDeletedMessageView;
exports.validateDeletedMessageView = validateDeletedMessageView;
exports.isMessageViewSender = isMessageViewSender;
exports.validateMessageViewSender = validateMessageViewSender;
exports.isConvoView = isConvoView;
exports.validateConvoView = validateConvoView;
exports.isLogBeginConvo = isLogBeginConvo;
exports.validateLogBeginConvo = validateLogBeginConvo;
exports.isLogLeaveConvo = isLogLeaveConvo;
exports.validateLogLeaveConvo = validateLogLeaveConvo;
exports.isLogCreateMessage = isLogCreateMessage;
exports.validateLogCreateMessage = validateLogCreateMessage;
exports.isLogDeleteMessage = isLogDeleteMessage;
exports.validateLogDeleteMessage = validateLogDeleteMessage;
const lexicons_1 = require("../../../../lexicons");
const util_1 = require("../../../../util");
const is$typed = util_1.is$typed, validate = lexicons_1.validate;
const id = 'chat.bsky.convo.defs';
const hashMessageRef = 'messageRef';
function isMessageRef(v) {
    return is$typed(v, id, hashMessageRef);
}
function validateMessageRef(v) {
    return validate(v, id, hashMessageRef);
}
const hashMessageInput = 'messageInput';
function isMessageInput(v) {
    return is$typed(v, id, hashMessageInput);
}
function validateMessageInput(v) {
    return validate(v, id, hashMessageInput);
}
const hashMessageView = 'messageView';
function isMessageView(v) {
    return is$typed(v, id, hashMessageView);
}
function validateMessageView(v) {
    return validate(v, id, hashMessageView);
}
const hashDeletedMessageView = 'deletedMessageView';
function isDeletedMessageView(v) {
    return is$typed(v, id, hashDeletedMessageView);
}
function validateDeletedMessageView(v) {
    return validate(v, id, hashDeletedMessageView);
}
const hashMessageViewSender = 'messageViewSender';
function isMessageViewSender(v) {
    return is$typed(v, id, hashMessageViewSender);
}
function validateMessageViewSender(v) {
    return validate(v, id, hashMessageViewSender);
}
const hashConvoView = 'convoView';
function isConvoView(v) {
    return is$typed(v, id, hashConvoView);
}
function validateConvoView(v) {
    return validate(v, id, hashConvoView);
}
const hashLogBeginConvo = 'logBeginConvo';
function isLogBeginConvo(v) {
    return is$typed(v, id, hashLogBeginConvo);
}
function validateLogBeginConvo(v) {
    return validate(v, id, hashLogBeginConvo);
}
const hashLogLeaveConvo = 'logLeaveConvo';
function isLogLeaveConvo(v) {
    return is$typed(v, id, hashLogLeaveConvo);
}
function validateLogLeaveConvo(v) {
    return validate(v, id, hashLogLeaveConvo);
}
const hashLogCreateMessage = 'logCreateMessage';
function isLogCreateMessage(v) {
    return is$typed(v, id, hashLogCreateMessage);
}
function validateLogCreateMessage(v) {
    return validate(v, id, hashLogCreateMessage);
}
const hashLogDeleteMessage = 'logDeleteMessage';
function isLogDeleteMessage(v) {
    return is$typed(v, id, hashLogDeleteMessage);
}
function validateLogDeleteMessage(v) {
    return validate(v, id, hashLogDeleteMessage);
}
//# sourceMappingURL=defs.js.map