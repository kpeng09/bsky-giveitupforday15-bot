"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAuthServerFactory = void 0;
const oauth_server_agent_js_1 = require("./oauth-server-agent.js");
class OAuthServerFactory {
    constructor(clientMetadata, runtime, resolver, fetch, keyset, dpopNonceCache) {
        Object.defineProperty(this, "clientMetadata", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: clientMetadata
        });
        Object.defineProperty(this, "runtime", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: runtime
        });
        Object.defineProperty(this, "resolver", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: resolver
        });
        Object.defineProperty(this, "fetch", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: fetch
        });
        Object.defineProperty(this, "keyset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: keyset
        });
        Object.defineProperty(this, "dpopNonceCache", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: dpopNonceCache
        });
    }
    async fromIssuer(issuer, dpopKey, options) {
        const serverMetadata = await this.resolver.getAuthorizationServerMetadata(issuer, options);
        return this.fromMetadata(serverMetadata, dpopKey);
    }
    async fromMetadata(serverMetadata, dpopKey) {
        return new oauth_server_agent_js_1.OAuthServerAgent(dpopKey, serverMetadata, this.clientMetadata, this.dpopNonceCache, this.resolver, this.runtime, this.keyset, this.fetch);
    }
}
exports.OAuthServerFactory = OAuthServerFactory;
//# sourceMappingURL=oauth-server-factory.js.map